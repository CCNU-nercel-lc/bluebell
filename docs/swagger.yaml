basePath: /api/v1
definitions:
  controller._ResponseCreatePost:
    properties:
      code:
        allOf:
        - $ref: '#/definitions/controller.ResCode'
        description: 业务响应状态码
      msg:
        description: 提示信息
        type: string
    type: object
  controller._ResponseLogin:
    properties:
      code:
        allOf:
        - $ref: '#/definitions/controller.ResCode'
        description: 业务响应状态码
      msg:
        description: 提示信息
        type: string
      token:
        description: 生成的JWT
        type: string
    type: object
  controller._ResponsePostList:
    properties:
      code:
        allOf:
        - $ref: '#/definitions/controller.ResCode'
        description: 业务响应状态码
      data:
        description: 数据
        items:
          $ref: '#/definitions/models.ApiPostDetail'
        type: array
      message:
        description: 提示信息
        type: string
    type: object
  controller._ResponseSignUp:
    properties:
      code:
        allOf:
        - $ref: '#/definitions/controller.ResCode'
        description: 业务响应状态码
      msg:
        description: 提示信息
        type: string
    type: object
  controller.ResCode:
    enum:
    - 1000
    - 1001
    - 1002
    - 1003
    - 1004
    - 1005
    - 1006
    - 1007
    type: integer
    x-enum-varnames:
    - CodeSuccess
    - CodeInvalidParam
    - CodeUserExist
    - CodeUserNotExist
    - CodeInvalidPassword
    - CodeServerBusy
    - CodeNotLogin
    - CodeInvalidToken
  models.ApiPostDetail:
    properties:
      CommunityDetail:
        allOf:
        - $ref: '#/definitions/models.CommunityDetail'
        description: 嵌入社区信息结构体
      author_id:
        description: 用户ID，登录时保存到JWT中，通过解析JWT将ID放入ctx中
        example: "0"
        type: string
      author_name:
        type: string
      community_id:
        type: integer
      content:
        type: string
      create_time:
        type: string
      id:
        description: 帖子id，通过雪花算法生成
        type: integer
      status:
        type: integer
      title:
        type: string
      vote_num:
        type: integer
    required:
    - community_id
    - content
    - title
    type: object
  models.CommunityDetail:
    properties:
      create_Time:
        type: string
      id:
        type: integer
      introduction:
        type: string
      name:
        type: string
    type: object
  models.ParamNewPost:
    properties:
      community_id:
        description: 所属社区id
        type: integer
      content:
        description: 内容
        type: string
      title:
        description: 标题
        type: string
    required:
    - community_id
    - content
    - title
    type: object
  models.ParamsLogin:
    properties:
      password:
        description: 密码
        type: string
      username:
        description: 用户名
        type: string
    required:
    - password
    - username
    type: object
  models.ParamsSignUp:
    properties:
      password:
        type: string
      rePassword:
        type: string
      username:
        type: string
    required:
    - password
    - rePassword
    - username
    type: object
info:
  contact:
    email: support@swagger.io
    name: 这里写联系人信息
    url: http://www.swagger.io/support
  description: 这里写描述信息
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: 天涯论坛2024版
  version: "1.0"
paths:
  /createPost:
    get:
      consumes:
      - application/json
      description: 根据前端传递的参数创建帖子，存到mysql数据库中
      parameters:
      - description: Bearer JWT的格式
        in: header
        name: Authorization
        required: true
        type: string
      - description: 帖子信息
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/models.ParamNewPost'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller._ResponseCreatePost'
      security:
      - ApiKeyAuth: []
      summary: 创建帖子接口
      tags:
      - 帖子相关接口
  /getPost/:id:
    get:
      consumes:
      - application/json
      description: 根据某个帖子id获取单个帖子详细信息
      parameters:
      - description: Bearer JWT
        in: header
        name: Authorization
        required: true
        type: string
      - description: 帖子ID
        in: query
        name: postID
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller._ResponsePostList'
      security:
      - ApiKeyAuth: []
      summary: 根据某个帖子id获取单个帖子详细信息
      tags:
      - 帖子相关接口
  /getPosts:
    get:
      consumes:
      - application/json
      description: 根据前端传递的(分页)参数按时间或分数排序查询帖子列表接口，mysql
      parameters:
      - description: Bearer JWT
        in: header
        name: Authorization
        required: true
        type: string
      - description: 页面数量
        in: query
        name: Page
        type: integer
      - description: 页面大小
        in: query
        name: Size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller._ResponsePostList'
      security:
      - ApiKeyAuth: []
      summary: 获取帖子列表接口
      tags:
      - 帖子相关接口
  /getPosts2:
    get:
      consumes:
      - application/json
      description: 根据前端传递的(分页)参数按时间或分数排序查询帖子列表接口，redis
      parameters:
      - description: Bearer JWT
        in: header
        name: Authorization
        required: true
        type: string
      - description: 可以为空
        in: query
        name: community_id
        type: integer
      - description: 排序依据(time or score)
        in: query
        name: order
        type: string
      - description: 页面数量
        in: query
        name: page
        type: integer
      - description: 页面大小
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller._ResponsePostList'
      security:
      - ApiKeyAuth: []
      summary: 升级版帖子列表接口
      tags:
      - 帖子相关接口
  /login:
    post:
      consumes:
      - application/json
      description: 登录功能，用户输入username和password登录，登录成功返回JWT
      parameters:
      - description: 登录参数
        in: body
        name: LoginParam
        required: true
        schema:
          $ref: '#/definitions/models.ParamsLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller._ResponseLogin'
      security:
      - ApiKeyAuth: []
      summary: 登录功能，用户输入username和password登录，登录成功返回JWT
      tags:
      - 登录接口
  /signup:
    post:
      consumes:
      - application/json
      description: 注册功能，用户输入username和password注册
      parameters:
      - description: 注册参数
        in: body
        name: LoginParam
        required: true
        schema:
          $ref: '#/definitions/models.ParamsSignUp'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller._ResponseSignUp'
      security:
      - ApiKeyAuth: []
      summary: 注册功能，用户输入username和password注册
      tags:
      - 注册接口
swagger: "2.0"
